#!/bin/bash

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
export PATH

# Copy output to logfile
exec &> >(tee -a "/var/log/borgbackup/borg-auto.$(date +%Y%m%d-%H%M).log")

# Setting this, so the repo does not need to be given on the commandline:
#export BORG_REPO=ssh://borg-power@bayonet.plug.org.au:22/srv/backup/borg-{{ ansible_nodename }}
#export BORG_REPO=/srv/backup/borg-{{ ansible_nodename }}
export BORG_REPO=ssh://19678@ch-s012.rsync.net:22/data2/home/19678/ruby/

# Setting this, so you won't be asked for your repository passphrase:
export BORG_PASSPHRASE='{{ borg_passphrase }}'
# or this to ask an external program to supply the passphrase:
#export BORG_PASSCOMMAND='pass show backup'

# Setting this to enable SSH key access
export BORG_RSH='ssh -i /root/.ssh/borgkey'

# Rsync.net requires us to select a versioned copy of borg
export BORG_REMOTE_PATH=borg14

# Init once only
#borg init --encryption=repokey ; exit

# some helpers and error handling:
info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

info "$0: Starting backup to $BORG_REPO"

# Backup the most important directories into an archive named after
# the machine this script is currently running on:

ionice -c3 borg create              \
    --verbose                       \
    --filter AME                    \
    --list                          \
    --stats                         \
    --show-rc                       \
    --compression lz4               \
    --exclude-caches                \
    --exclude '*.pyc'               \
    --exclude '/home/*/.cache/'     \
    --exclude '/home/pot_homes/spamfilter/Maildir' \
    --exclude '/home/spamfilter/Maildir' \
    --exclude '/var/log/borgbackup/'\
    --exclude '/var/lib/apt/lists/' \
    --exclude '/var/cache/'         \
    --exclude '/var/tmp/'           \
    --exclude '/srv/efs/'           \
    --exclude '/srv/backup/'        \
    --exclude '/dev'                \
    --exclude '/mnt'                \
    --exclude '/proc'               \
    --exclude '/run'                \
    --exclude '/sys'                \
    --exclude '/tmp'                \
                                    \
    ::'{hostname}-{now}'            \
    /                               \

backup_exit=$?

info "Pruning repository"

# Use the `prune` subcommand to maintain 7 daily, 4 weekly and 6 monthly
# archives of THIS machine. The '{hostname}-' prefix is very important to
# limit prune's operation to this machine's archives and not apply to
# other machines' archives also:

ionice -c3 borg prune               \
    --list                          \
    --prefix '{hostname}-'          \
    --show-rc                       \
    --keep-daily    7               \
    --keep-weekly   4               \
    --keep-monthly  -1              \
    --keep-yearly   -1              \

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 1 ];
then
    info "Backup and/or Prune finished with a warning"
fi

if [ ${global_exit} -gt 1 ];
then
    info "Backup and/or Prune finished with an error"
fi

exit ${global_exit}
